"""
create:          NorSodikin.t.me
"""

from PyroUbot import *

__MODULE__ = "filterprivate"
__HELP__ = """
<blockquote>
<b>„Äé  ô·¥Ä…¥·¥õ·¥ú·¥Ä…¥ “ì…™ ü·¥õ·¥á Ä ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á „Äè</b> </blockquote>
  <blockquote>
  <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}pfilter</code> <b>·¥è…¥/·¥è“ì“ì</b>
     <i>untuk mengaktifkan atau mengaktifkan filter</i>
      <b> ·¥Ñ·¥Ä·¥õ·¥Ä·¥õ·¥Ä…¥:</b> <i>khusus private chat</b>
  
  <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}paddfilter</code> <b>…¥·¥Ä·¥ç·¥Ä -  Ä·¥á·¥ò ü è_·¥çs…¢</b>
     <i>untuk menambahkan filter ke database</i>
      <b> ·¥Ñ·¥Ä·¥õ·¥Ä·¥õ·¥Ä…¥:</b> <i>khusus private chat</i>

  <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}pdelfilter</code> <b>…¥·¥Ä·¥ç·¥Ä “ì…™ ü·¥õ·¥á Ä</b>
     <i>untuk menghapus filter dari database</i>
      <b> ·¥Ñ·¥Ä·¥õ·¥Ä·¥õ·¥Ä…¥:</b> <i>khusus private chat</i> 

  <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}listpfilter</code>
     <i>untuk mendapatkan semua daftar filters</i>
      <b> ·¥Ñ·¥Ä·¥õ·¥Ä·¥õ·¥Ä…¥:</b> <i>khusus private chat</i>
      </blockquote>
"""


@PY.NO_CMD_UBOT("FILTER_PRIVATE", ubot)
async def _(client, message):
    try:
        chat_logs = bot.me.id
        all_filters = await all_vars(client.me.id, "PVT_FILTERS") or {}
        
        for key, value in all_filters.items():
            if key == message.text.split()[0]:
                msg = await client.get_messages(int(chat_logs), int(value))
                return await msg.copy(message.chat.id, reply_to_message_id=message.id)
    except BaseException:
        pass


@PY.UBOT("pfilter")
@PY.ULTRA
@PY.PRIVATE
async def _(client, message):
    ggl = await EMO.GAGAL(client)
    sks = await EMO.BERHASIL(client)
    prs = await EMO.PROSES(client)
    txt = await message.reply(f"{prs}<b>s·¥á·¥Ö·¥Ä…¥…¢ ·¥ç·¥á·¥ç·¥ò Ä·¥ès·¥ás...</b>")
    arg = get_arg(message)

    if not arg or arg.lower() not in ["off", "on"]:
        return await txt.edit(f"<b>{ggl}…¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ ·¥è…¥/·¥è“ì“ì</b>")

    type = True if arg.lower() == "on" else False
    await set_vars(client.me.id, "FILTER_PVT_ON_OFF", type)
    return await txt.edit(f"{sks}<b>“ì…™ ü·¥õ·¥á Äs  ô·¥á Ä ú·¥Äs…™ ü ·¥Ö…™ s·¥á·¥õ·¥õ…™…¥…¢s ·¥ã·¥á</b> <code>{type}</code>")


@PY.UBOT("paddfilter")
@PY.ULTRA
@PY.PRIVATE
async def _(client, message):
    ggl = await EMO.GAGAL(client)
    sks = await EMO.BERHASIL(client)
    prs = await EMO.PROSES(client)
    txt = await message.reply(f"{prs}<b>s·¥á·¥Ö·¥Ä…¥…¢ ·¥ç·¥á·¥ç·¥ò Ä·¥ès·¥ás...</b>")
    type, reply = extract_type_and_msg(message)

    if not type and message.reply_to_message:
        return await txt.edit(f"{ggl}<b> ú·¥Ä Ä·¥Ä·¥ò  ô·¥Ä ü·¥Äs ·¥ò·¥ás·¥Ä…¥ ·¥Ö·¥Ä…¥ ·¥ã·¥Äs…™ ú …¥·¥Ä·¥ç·¥Ä</b>")

    logs = bot.me.id
    if bool(logs):
        try:
            msg = await reply.copy(int(logs))
            await set_vars(client.me.id, type, msg.id, "PVT_FILTERS")
            await txt.edit(f"{sks}<b>“ì…™ ü·¥õ·¥á Äs</b> <code>{type}</code> <b> ô·¥á Ä ú·¥Äs…™ ü ·¥Ö…™ s…™·¥ç·¥ò·¥Ä…¥</b>")
        except Exception as error:
            await txt.edit(error)
    else:
        return await txt.edit(f"{ggl}<b>·¥õ…™·¥Ö·¥Ä·¥ã  ô…™s·¥Ä ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ “ì…™ ü·¥õ·¥á Äs  ô·¥Ä Ä·¥ú</b>")


@PY.UBOT("pdelfilter")
@PY.ULTRA
@PY.PRIVATE
async def _(client, message):
    ggl = await EMO.GAGAL(client)
    sks = await EMO.BERHASIL(client)
    prs = await EMO.PROSES(client)
    txt = await message.reply(f"{prs}<b>·¥õ·¥ú…¥…¢…¢·¥ú s·¥á ô·¥á…¥·¥õ·¥Ä Ä..</b>")
    arg = get_arg(message)

    if not arg:
        return await txt.edit(f"{ggl}<code>{message.text.split()[0]}</code> <b>…¥·¥Ä·¥ç·¥Ä “ì…™ ü·¥õ·¥á Ä</b>")

    logs = bot.me.id
    all = await all_vars(client.me.id, "PVT_FILTERS")

    if arg not in all:
        return await txt.edit(f"{ggl}<b>“ì…™ ü·¥õ·¥á Ä</b> <code>{arg}</code> <b>·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ö…™·¥õ·¥á·¥ç·¥ú·¥ã·¥Ä…¥</b>")

    await remove_vars(client.me.id, arg, "PVT_FILTERS")
    await client.delete_messages(logs, all[arg])
    return await txt.edit(f"<b>“ì…™ ü·¥õ·¥á Ä<b> <code>{arg}</code> <b> ô·¥á Ä ú·¥Äs…™ ü ·¥Ö…™ ú·¥Ä·¥ò·¥ús{sks}</b>")


@PY.UBOT("listpfilter")
@PY.ULTRA
@PY.PRIVATE
async def _(client, message):
    vars = await all_vars(client.me.id, "PVT_FILTERS")
    if vars:
        msg = "<b>üìù ·¥Ö·¥Ä“ì·¥õ·¥Ä Ä “ì…™ ü·¥õ·¥á Äs ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á</b>\n"
        for x in vars.keys():
            msg += f"<b> ‚îú <code>{x}</code></b>\n"
        msg += f"<b> ‚ï∞ ·¥õ·¥è·¥õ·¥Ä ü “ì…™ ü·¥õ·¥á Äs: {len(vars)}</b>"
    else:
        msg = "<b>‚ùå ·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ä·¥Ö·¥Ä “ì…™ ü·¥õ·¥á Äs  è·¥Ä…¥…¢ ·¥õ·¥á Äs…™·¥ç·¥ò·¥Ä…¥</b>"

    return await message.reply(msg, quote=True)
