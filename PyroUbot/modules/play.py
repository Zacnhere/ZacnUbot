import os
import re
import asyncio
from pyrogram.types import Message
from pytgcalls import filters as fl
from pytgcalls import PyTgCalls
from pytgcalls.types import ChatUpdate
from pytgcalls.types import GroupCallParticipant
from pytgcalls.types import MediaStream
from pytgcalls.types import AudioQuality
from pytgcalls.types import MediaStream
from pytgcalls.types import VideoQuality
from pytgcalls.types import Update
from youtubesearchpython import VideosSearch
from yt_dlp import YoutubeDL
from functools import partial
from PyroUbot import *
__MODULE__ = "music"
__HELP__ = """
<blockquote>
<b> „Äé  ô·¥Ä…¥·¥õ·¥ú·¥Ä…¥ ·¥ú…¥·¥õ·¥ú·¥ã  ·¥ò ü·¥Ä è ·¥ç·¥ús…™·¥Ñ „Äè </b> </blockquote>
 <blockquote>
 <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}play</code>
     <i>untuk memutar music </i>

 <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}end</code>
     <i>untuk menghentikan music</i>

 <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}skip</code>
¬†¬†¬†  <i>untuk meng skip music</i>

 <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}pause</code>
¬†¬†¬†  <i>untuk menjeda music</i>

 <b>‚û¢ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú:</b> <code>{0}resume</code>
¬†¬†¬†  <i>untuk melanjutkan music</i>
     </blockquote>
"""
def ytsearch(query):
    try:
        search = VideosSearch(query, limit=1)
        for r in search.result()["result"]:
            ytid = r['id']
            if len(r['title']) > 34:
                songname = r['title'][:35] + "..."
            else:
                songname = r['title']
            url = f"https://www.youtube.com/watch?v={ytid}"
        return [songname, url]
    except Exception as e:
        print(e)
        return 0


async def run_sync(func, *args, **kwargs):
    loop = asyncio.get_event_loop()
    p_func = partial(func, *args, **kwargs)
    return await loop.run_in_executor(None, p_func)


async def YoutubeDownload(url, as_video=False):
    try:
        ydl_opts = {
            "quiet": True,
            "no_warnings": True,
            "format": "(bestvideo[height<=720][width<=1280][ext=mp4])+bestaudio[ext=m4a]/best"
         if as_video
         else "bestaudio[ext=m4a]/bestaudio/best",
            "outtmpl": "downloads/%(id)s.%(ext)s",
            "nocheckcertificate": True,
            "geo_bypass": True,
            "cookiefile": "cookies.txt",
        }

        # Check available formats
        with YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=False)
            available_formats = [f["format_id"] for f in info.get("formats", [])]
            print(f"Available formats: {available_formats}")

        # Re-adjust the format based on availability
        if as_video and "22" in available_formats:  # Example: format ID 22 is 720p MP4
            ydl_opts["format"] = "22"
        elif not as_video and "140" in available_formats:  # Example: format ID 140 is M4A
            ydl_opts["format"] = "140"

        # Download the video/audio
        ydl = YoutubeDL(ydl_opts)
        ytdl_data = await run_sync(ydl.extract_info, url, download=True)

        # Prepare metadata
        file_name = ydl.prepare_filename(ytdl_data)
        videoid = ytdl_data["id"]
        title = ytdl_data["title"]
        duration = str(timedelta(seconds=ytdl_data["duration"]))
        channel = ytdl_data["uploader"]
        views = f"{ytdl_data['view_count']:,}".replace(",", ".")
        thumb = f"https://img.youtube.com/vi/{videoid}/hqdefault.jpg"
        yt_url = f"https://youtu.be/{videoid}"

        data_ytp = (
            f"<b>üóØ …™…¥Íú∞·¥è Ä·¥ç·¥Äs…™ {title}</b>\n\n"
            f"<b>üí† …¥·¥Ä·¥ç·¥Ä:</b> {title}\n"
            f"<b>‚è≤ ·¥Ö·¥ú Ä·¥Äs…™:</b> {duration}\n"
            f"<b>üéë ·¥Ö…™ ü…™ ú·¥Ä·¥õ:</b> {views}\n"
            f"<b>üåç ·¥Ñ ú·¥Ä…¥…¥·¥á ü:</b> {channel}\n"
            f"<b>üîó ·¥õ·¥Ä·¥ú·¥õ·¥Ä…¥:</b> <a href={yt_url}> è·¥è·¥ú·¥õ·¥ú ô·¥á</a>\n\n"
            f"<b>·¥ò ü·¥Ä è  ô è :</b> Your Bot"
        )

        return file_name, title, yt_url, duration, views, channel, thumb, data_ytp

    except Exception as e:
        print(f"Error in YoutubeDownload: {e}")
        return None, None, None, None, None, None, None, f"‚ö†Ô∏è Error: {e}"


@PY.HAKU("play")
@PY.ULTRA
@PY.GROUP
async def play(client, m: Message):
    prs = await EMO.PROSES(client)
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    replied = m.reply_to_message
    chat_id = m.chat.id
    if replied:
        if replied.audio or replied.voice:
            huehue = await replied.reply(f"{brhsl}<b>·¥ò Ä·¥è·¥Ñ·¥Ñ·¥ás…™…¥…¢...</b>")
            dl = await replied.download()
            link = replied.link
            if replied.audio:
                if replied.audio.title:
                    songname = replied.audio.title[:35] + "..."
                else:
                    if replied.audio.file_name:
                        songname = replied.audio.file_name[:35] + "..."
                    else:
                        songname = "Audio"
            elif replied.voice:
                songname = "Voice Note"
            if chat_id in QUEUE:
                pos = add_to_queue(chat_id, songname, dl, link, "Audio", 0)
                await huehue.edit(f"<blockquote><b>{brhsl}·¥Ö…™·¥õ·¥Ä·¥ç ô·¥Ä ú·¥ã·¥Ä…¥ ·¥ã·¥á ·¥Ä…¥·¥õ Ä…™·¥Ä…¥ #{pos}</b></blockquote>")
            else:
                try:
                    await client.call_py.play(
                        chat_id,
                        MediaStream(
                        dl,
                        AudioQuality.STUDIO,
                        ),
                    )
                    add_to_queue(chat_id, songname, dl, link, "Audio", 0)
                    await huehue.edit(f"<blockquote>**<emoji id=5895705279416241926>‚ñ∂</emoji> s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥ò ü·¥Ä è…™…¥…¢ ·¥Ä·¥ú·¥Ö…™·¥è** \n**<emoji id=6026256492619895014>üéµ</emoji> …¥·¥Ä·¥ç·¥á** : [{songname}]({link}) \n**<emoji id=5323442290708985472>¬©</emoji> ·¥Ñ ú·¥Ä·¥õ** : `{chat_id}`</blockquote>", disable_web_page_preview=True)
                    os.remove(dl)
                except Exception as hmme:
                    await huehue.edit(hmme)
        else:
            if len(m.command) < 2:
                await m.reply(f"<b>{ggl} Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä…¥ ·¥Ä·¥ú·¥Ö…™·¥è “ì…™ ü·¥á ·¥è Ä …¢…™·¥†·¥á s·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥õ·¥è s·¥á·¥Ä Ä·¥Ñ ú</b>")
            else:
                huehue = await m.reply("`Getting...`")
                query = m.text.split(None, 1)[1]
                search = ytsearch(query)
                if search == 0:
                    await huehue.edit(f"<blockquote>{ggl}<b>“ì·¥è·¥ú…¥·¥Ö …¥·¥è·¥õ ú…™…¥…¢ “ì·¥è Ä ·¥õ ú·¥á …¢…™·¥†·¥á…¥ «´·¥ú·¥á Ä è !</b></blockquote>")
                else:
                    songname = search[0]
                    url = search[1]
                    try:
                        file_name, title, yt_url, duration, views, channel, thumb, data_ytp = await YoutubeDownload(url)
                        if chat_id in QUEUE:
                            pos = add_to_queue(chat_id, songname, file_name, yt_url, "Audio", 0)
                            await huehue.edit(f"<blockquote><b>{brhsl}·¥Ö…™·¥õ·¥Ä·¥ç ô·¥Ä ú·¥ã·¥Ä…¥ ·¥ã·¥á ·¥Ä…¥·¥õ Ä…™·¥Ä…¥ #{pos}</b></blockquote>")
                        else:
                            try:
                                await client.call_py.play(
                                    chat_id,
                                    MediaStream(
                                    file_name,
                                    AudioQuality.STUDIO,
                                    ),
                                )                                
                                add_to_queue(chat_id, songname, file_name, yt_url, "Audio", 0)
                                await huehue.edit(f"<blockquote>**<emoji id=5895705279416241926>‚ñ∂</emoji> s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥ò ü·¥Ä è…™…¥…¢ ·¥Ä·¥ú·¥Ö…™·¥è** \n**<emoji id=6026256492619895014>üéµ</emoji> s·¥è…¥…¢** : [{songname}]({url}) \n**<emoji id=5323442290708985472>¬©</emoji> ·¥Ñ ú·¥Ä·¥õ** : `{chat_id}`</blockquote>", disable_web_page_preview=True)
                                os.remove(file_name)
                            except Exception as ep:
                                await huehue.edit(f"`{ep}`")
                    except Exception as e:
                        await huehue.edit(f"**YTDL ERROR ‚ö†Ô∏è** \n\n`{str(e)}`")
    else:
        if len(m.command) < 2:
            await m.reply(f"<blockquote>{ggl}<b>·¥ç·¥è ú·¥è…¥  ô·¥Ä ü·¥Äs ·¥ã·¥á ·¥Ä·¥ú·¥Ö…™·¥è ·¥Ä·¥õ·¥Ä·¥ú ·¥ã·¥á·¥õ…™·¥ã</b> <code>·¥ò ü·¥Ä è ·¥ä·¥ú·¥Ö·¥ú ü  ü·¥Ä…¢·¥ú</code></blockquote>")
        else:
            huehue = await m.reply(f"{prs}<b>s·¥á·¥Ä Ä·¥Ñ ú…™…¥…¢...</b>")
            query = m.text.split(None, 1)[1]
            search = ytsearch(query)
            if search == 0:
                await huehue.edit(f"<blockquote>{ggl}<b>“ì·¥è·¥ú…¥·¥Ö …¥·¥è·¥õ ú…™…¥…¢ “ì·¥è Ä ·¥õ ú·¥á …¢…™·¥†·¥á…¥ «´·¥ú·¥á Ä è !</b></blockquote>")
            else:
                songname = search[0]
                url = search[1]
                try:
                    file_name, title, yt_url, duration, views, channel, thumb, data_ytp = await YoutubeDownload(url)
                    if chat_id in QUEUE:
                        pos = add_to_queue(chat_id, songname, file_name, yt_url, "Audio", 0)
                        await huehue.edit(f"<blockquote><b>{brhsl}·¥Ö…™·¥õ·¥Ä·¥ç ô·¥Ä ú·¥ã·¥Ä…¥ ·¥ã·¥á ·¥Ä…¥·¥õ Ä…™·¥Ä…¥ #{pos}</b></blockquote>")
                    else:
                        try:
                            await client.call_py.play(
                                chat_id,
                                MediaStream(
                                file_name,
                                AudioQuality.STUDIO,
                                ),
                            )
                            add_to_queue(chat_id, songname, file_name, yt_url, "Audio", 0)
                            await huehue.edit(f"<blockquote>**<emoji id=5895705279416241926>‚ñ∂</emoji>s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥ò ü·¥Ä è…™…¥…¢ ·¥Ä·¥ú·¥Ö…™·¥è** \n**<emoji id=6026256492619895014>üéµ</emoji> s·¥è…¥…¢** : [{songname}]({url}) \n**<emoji id=5323442290708985472>¬©</emoji> ·¥Ñ ú·¥Ä·¥õ** : `{chat_id}`</blockquote>", disable_web_page_preview=True)
                            os.remove(file_name)
                        except Exception as ep:
                            await huehue.edit(f"`{ep}`")
                except Exception as e:
                    await huehue.edit(f"**YTDL ERROR ‚ö†Ô∏è** \n\n`{str(e)}`")
